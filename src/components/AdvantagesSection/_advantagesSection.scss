@use "../../abstracts/colors" as c;
@use "../../base/functions" as func;
@use "../../abstracts/mixins" as *;

:root {
  --counter-size: 4rem;
  --counter-gap: 2rem;
}

.advantages {
  @include flex();
  gap: 3rem;
  margin-top: 1rem;
  @media (width <= func.rem(1024)) {
    @include flex(column, flex-start, center);
    text-align: center;
  }

  @media (width > func.rem(1024)) {
    &__text {
      width: 50%;
    }
  }

  &__text-header {
    max-width: 20ch;
    font-size: clamp(1.5rem, 2vw + 1.5em, 2.5rem);
    margin-bottom: 2rem;
  }

  &__description {
    max-width: 32ch;
    @media (width <= func.rem(1024)) {
      margin-inline: auto;
    }
  }

  &__list {
    counter-reset: my-custom-counter;
    text-align: start;
    @include flex(column);
    gap: 2.5rem;
    @media (width > func.rem(1024)) {
      width: 50%;
      padding-left: calc(var(--counter-size) + var(--counter-gap));
    }
    @media (width <= func.rem(1024)) {
      padding-left: 3rem;
    }
    @media (width <= func.rem(480)) {
      padding-left: 1rem;
    }
  }

  &__list-item {
    position: relative;
    counter-increment: my-custom-counter;
    &::before {
      content: counter(my-custom-counter, decimal-leading-zero);
      position: absolute;
      width: var(--counter-size);
      height: func.rem(40);
      line-height: func.rem(40);
      text-align: center;
      border-radius: 9999px;
      background: c.$bright-red;
      color: c.$very-light-gray;
      font-weight: 500;
      @media (width > func.rem(1024)) {
        translate: calc(-100% - var(--counter-gap)) -25%;
      }
    }
  }

  &__list-item-header {
    margin-bottom: 0.75em;
    @media (width <= func.rem(1024)) {
      background: c.$bright-red-opaque;
      padding-block: 0.5em;
      padding-left: 2rem;
      translate: calc(var(--counter-size) - 1rem);
    }
  }

  &__list-item-text {
    @media (width <= func.rem(1024)) {
      padding-right: 3rem;
    }
    @media (width <= func.rem(480)) {
      padding-right: 1rem;
    }
  }
}
